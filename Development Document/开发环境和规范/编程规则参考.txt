排版规范
==================
缩近：tab（两个字符）缩进
括号：
	if(fox)
	{
		dog();
	}else{
		cat();
	}
每行代码长度：80字符

注释规范
==================
每一个.java文件的注释要求：
1. 文件头部分的注释内容包括：
1）版本：
2）描述：
3）ToDo：进一步要做的内容

格式：
文件头注释：
/**
* @version2.0 for WiMap 2010/1/19
* <DT><B>描述:</B>
* <DD> 完成....功能，或者测试xxx的测试用例
* <DT><B>ToDo:</B>
* <DD>
*/


2. 属性注释（接口代码中的属性注释）


3. 函数注释（接口代码和实现代码函数注释）
1）功能描述：
2）参数：
3）返回：
4）抛出异常：
...

格式：
/**
* <DL><DT><B>功能描述：</B>
* <DD>设置空调温度参数int设置温度值（摄氏温度），返回调节的温度
* </DL>
* @param tmp 设置的温度值
* @return 返回调节后的温度值
*/




命名约定 
==================
变量的定义
变量的定义应该遵循匈牙利命名法，它使用3字符前缀来表示数据类型，3个字符的前缀必须小写，前缀后面是由表意性强的一个单词或多个单词组成的名字，而且每个单词的首写字母大写，其它字母小写，这样保证了对变量名能够进行正确的断句。 这样，在一个变量名就可以反映出变量类型和变量所存储的值的意义两方面内容，这使得代码语句可读性强、更加容易理解。
包、类及方法命名 
1) 包 
全部小写。 标识符用点号分隔开来。为了使包的名字更易读，Sun 公司建议包名中的标识符用点号来分隔。 
Sun 公司的标准 java 分配包用标识符 .java 开头。 
全局包的名字用你的机构的 Internet 保留域名开头 。 
局部包： interface.screens 
全局包： com.rational.www. interface.screens 
2) 类，接口 
类的名字应该使用名词。 
每个单词第一个字母应该大写。 
避免使用单词的缩写，除非它的缩写已经广为人知，如HTTP。 
Class Hello ; 
Class HelloWorld ; 
Interface Apple ; 
3) 方法 
第一个单词一般是动词。 
第一个字母是小些，但是中间单词的第一个字母是大写。 
如果方法返回一个成员变量的值，方法名一般为get+成员变量名，如若返回的值是bool变量，一般以is作为前缀。 
如果方法修改一个成员变量的值，方法名一般为：set + 成员变量名。 
getName(); setName(); isFirst(); 
4) 变量 
第一个字母小写，中间单词的第一个字母大写。 
不要用_或&作为第一个字母。 
尽量使用短而且具有意义的单词。 
单字符的变量名一般只用于生命期非常短暂的变量。i,j,k,m,n一般用于integers；c,d,e一般用于characters。 
如果变量是集合，则变量名应用复数。 
命名组件采用匈牙利命名法，所有前缀均应遵循同一个组件名称缩写列表。 
String myName; int[] students; int i; int n; char c; btNew; (bt是Button的缩写) 
5) 常量 
所有常量名均全部大写，单词间以‘_’隔开。 int MAX_NUM; 
6) 其它 
开发人员如果遇到上述表格中未列举的类型，请书面通知相关管理人员，由管理人员集中更新列表内容，不得擅自启用未经确定的新变量前缀。 